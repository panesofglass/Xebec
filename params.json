{"name":"Xebec","tagline":"Imagine a world where you could have your F# fun without the msbuild pain, misery, and suffering ...","body":"__Note: All documentation is preliminary and will be incrementally improved.__\r\n\r\nXebec aims to fulfil a dream, a dream where you don't have to use and fight against msbuild.  It also allows you to use other xebec packages as references which will be build if necessary as part of the build process.  \r\n\r\nIt takes inspiration from package management schemes from language like Rust and Elixir.  \r\n\r\nA very simple example would be as following toml file:\r\n\r\n    [project]\r\n    name = \"helloworld\"\r\n    version = \"0.1.0\"\r\n    authors = [\"Your Name <you@example.com>\"]\r\n    source = [\"main.fs\"]\r\n\r\nXebec allows you to use a github repo as a project dependency rather than a just nuget package, or dll:\r\n\r\n    [dependencies]\r\n    tlh = { git = \"https://github.com/7sharp9/TheLurkingHorror\" }\r\n\r\nThe github repo will be downloaded and compiled as part of your build.\r\n\r\nThe following types of dependencies are also supported `git`, `nuget`, `local`, and `dll` can be specified\r\n- - -\r\n#Command Line\r\nXebec can also be used from the command line, the following commands can be used:\r\n\r\n##new\r\nCreates a new xebec project\r\n##build\r\nThe build option allows you to compile your current project\r\n##run\r\nThe new option allows you to compile and run your xebec project\r\n##clean\r\nThe clean option clean up and temporary files and target directory/s \r\n##test\r\nRun the tests\r\n##doc\r\nCompiles project and produces documentation \r\n##update\r\nUpdate dependencies","google":"123456789","note":"Don't delete this file! It's used internally to help with page regeneration."}